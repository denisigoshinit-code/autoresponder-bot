import json  # ‚Üê –¥–æ–±–∞–≤–ª–µ–Ω–æ
from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

router = Router()

class FeedbackForm(StatesGroup):
    waiting_for_name = State()
    waiting_for_question = State()
    waiting_for_contact = State()

@router.message(Command("feedback"))
async def cmd_feedback(message: Message, state: FSMContext):
    try:
        with open("config.json", "r", encoding="utf-8") as f:
            config = json.load(f)
        await state.set_state(FeedbackForm.waiting_for_name)
        await message.answer(config["feedback_prompt"])
    except Exception as e:
        await message.answer("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ä–º—ã.")

@router.message(FeedbackForm.waiting_for_name)
async def feedback_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(FeedbackForm.waiting_for_question)
    await message.answer("–¢–µ–ø–µ—Ä—å –æ–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å:")

@router.message(FeedbackForm.waiting_for_question)
async def feedback_question(message: Message, state: FSMContext):
    await state.update_data(question=message.text)
    await state.set_state(FeedbackForm.waiting_for_contact)
    await message.answer("–ö–∞–∫ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è (Telegram, email, —Ç–µ–ª–µ—Ñ–æ–Ω)?")

@router.message(FeedbackForm.waiting_for_contact)
async def feedback_contact(message: Message, state: FSMContext):
    user_data = await state.get_data()
    user = message.from_user
    full_name = user.full_name or "–ê–Ω–æ–Ω–∏–º"
    username = f"@{user.username}" if user.username else "–Ω–µ —É–∫–∞–∑–∞–Ω"

    try:
        with open(".env", "r") as f:
            env_data = f.read()
        admin_id = env_data.split("ADMIN_ID=")[1].strip().split("\n")[0]
    except Exception as e:
        await message.answer("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        await state.clear()
        return

    bot = message.bot
    feedback_msg = (
        f"üì© <b>–ù–æ–≤–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å</b>\n"
        f"–ò–º—è: {user_data['name']}\n"
        f"–í–æ–ø—Ä–æ—Å: {user_data['question']}\n"
        f"–ö–æ–Ω—Ç–∞–∫—Ç: {message.text}\n"
        f"–û—Ç: {username} ({full_name})"
    )

    try:
        await bot.send_message(chat_id=admin_id, text=feedback_msg, parse_mode="HTML")
        await message.answer("–°–ø–∞—Å–∏–±–æ! –Ø –ø–µ—Ä–µ–¥–∞–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
    except Exception as e:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ ID –∞–¥–º–∏–Ω–∞.")
    await state.clear()